// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

model User {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  first_name   String?
  last_name    String?
  fullName     String?
  password     String?
  image        String?
  email        String?
  notification Boolean?     @default(true)
  is_verified  Boolean      @default(false)
  gender       Gender?
  phone_number Int          @unique
  dob          DateTime?
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
  bearerToken  BearerToken?
  device_token String?
  Lendings     Lendings[]
  Borrowings   Borrowings[]
}

model VerifyPhoneNumber {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  phone_number Int      @unique
  token        String   @unique
  expires      DateTime @unique
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
}

model BearerToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id    String   @unique @db.ObjectId
  user       User     @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  token      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

enum SapatiStatus {
  PENDING
  APPROVED
  DECLINED
  CHANGE
  CHANGED
}

enum SapatiType {
  LENDED
  BORROWED
}

model Sapati {
  id              String       @id @default(auto()) @map("_id") @db.ObjectId
  fullName        String?
  image           String?
  phone           String
  amount          Int
  taken_date      DateTime
  return_date     DateTime
  decline_reason  String?
  change_reason   String?
  changed_remarks String?
  changed_amount  Int?
  remarks         String?
  isPaid          Boolean      @default(false)
  type            SapatiType
  sapati_satatus  SapatiStatus @default(PENDING)
  created_at      DateTime     @default(now())
  updated_at      DateTime     @updatedAt
  lendings        Lendings?
  borrowings      Borrowings?
}

model Lendings {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id    String   @db.ObjectId
  user       User     @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  sapati_id  String   @unique @db.ObjectId
  sapati     Sapati   @relation(fields: [sapati_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Borrowings {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  user_id    String   @db.ObjectId
  user       User     @relation(fields: [user_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  sapati_id  String   @unique @db.ObjectId
  sapati     Sapati   @relation(fields: [sapati_id], references: [id], onUpdate: Cascade, onDelete: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Admin {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  full_name  String
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
